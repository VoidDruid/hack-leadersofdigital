# Develop image
FROM python:3.8-slim as dev

ENV PIP_DISABLE_PIP_VERSION_CHECK=on
ENV PIP_NO_CACHE_DIR=off
ENV PYTHONDONTWRITEBYTECODE=on
ENV PYTHONFAULTHANDLER=on
ENV PYTHONUNBUFFERED=on
ENV PYTHONPATH=/opt/app
ENV POETRY_VERSION=1.0.2

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

RUN pip install "poetry==$POETRY_VERSION" \
    && poetry config virtualenvs.create false

RUN mkdir /opt/app
WORKDIR /opt/app

COPY pyproject.toml poetry.lock /opt/app/
RUN poetry install --no-dev --no-interaction --no-ansi

EXPOSE 8000

# Production image
FROM dev as prod

COPY deployment/start.sh deployment/gunicorn_conf.py /opt/app/
RUN chmod +x start.sh

COPY alembic /opt/app/alembic
COPY conf /opt/app/conf
COPY crud /opt/app/crud
COPY database /opt/app/database
COPY services /opt/app/services
COPY utils /opt/app/utils

CMD ["./start.sh"]
