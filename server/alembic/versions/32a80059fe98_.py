"""

Revision ID: 32a80059fe98
Revises: bd398edb7d68
Create Date: 2020-06-19 22:42:11.494464

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = '32a80059fe98'
down_revision = 'bd398edb7d68'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'discipline',
        sa.Column('discipline_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=25), nullable=False),
        sa.Column('category', sa.String(length=25), nullable=True),
        sa.PrimaryKeyConstraint('discipline_id'),
    )
    op.create_index(op.f('ix_discipline_category'), 'discipline', ['category'], unique=False)
    op.create_index(
        op.f('ix_discipline_discipline_id'), 'discipline', ['discipline_id'], unique=False
    )
    op.create_index(op.f('ix_discipline_name'), 'discipline', ['name'], unique=False)

    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    if 'program_template' not in tables:
        op.create_table(
            'program_template',
            sa.Column('program_template_id', sa.Integer(), nullable=False),
            sa.Column('hours', sa.Integer(), nullable=True),
            sa.Column('category', sa.String(length=25), nullable=True),
            sa.PrimaryKeyConstraint('program_template_id'),
            sa.UniqueConstraint('category'),
        )
        op.create_index(
            op.f('ix_program_template_program_template_id'),
            'program_template',
            ['program_template_id'],
            unique=False,
        )

    op.create_table(
        'program_to_discipline',
        sa.Column('discipline_id', sa.Integer(), nullable=False),
        sa.Column('program_id', sa.Integer(), nullable=False),
        sa.Column('hours', sa.Integer(), nullable=True),
        sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(['discipline_id'], ['discipline.discipline_id'],),
        sa.ForeignKeyConstraint(['program_id'], ['program.program_id'],),
        sa.PrimaryKeyConstraint('discipline_id', 'program_id'),
    )
    op.drop_column('program', 'is_minor')
    op.add_column('program_to_parameter', sa.Column('parameter_id', sa.Integer(), nullable=False))
    op.add_column('program_to_parameter', sa.Column('program_id', sa.Integer(), nullable=False))
    op.drop_constraint(
        'program_to_parameter_right_id_fkey', 'program_to_parameter', type_='foreignkey'
    )
    op.drop_constraint(
        'program_to_parameter_left_id_fkey', 'program_to_parameter', type_='foreignkey'
    )
    op.create_foreign_key(None, 'program_to_parameter', 'program', ['program_id'], ['program_id'])
    op.create_foreign_key(
        None, 'program_to_parameter', 'parameter', ['parameter_id'], ['parameter_id']
    )
    op.drop_column('program_to_parameter', 'right_id')
    op.drop_column('program_to_parameter', 'left_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'program_to_parameter',
        sa.Column('left_id', sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        'program_to_parameter',
        sa.Column('right_id', sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, 'program_to_parameter', type_='foreignkey')
    op.drop_constraint(None, 'program_to_parameter', type_='foreignkey')
    op.create_foreign_key(
        'program_to_parameter_left_id_fkey',
        'program_to_parameter',
        'parameter',
        ['left_id'],
        ['parameter_id'],
    )
    op.create_foreign_key(
        'program_to_parameter_right_id_fkey',
        'program_to_parameter',
        'program',
        ['right_id'],
        ['program_id'],
    )
    op.drop_column('program_to_parameter', 'program_id')
    op.drop_column('program_to_parameter', 'parameter_id')
    op.add_column(
        'program', sa.Column('is_minor', sa.BOOLEAN(), autoincrement=False, nullable=False)
    )
    op.drop_table('program_to_discipline')
    op.drop_index(op.f('ix_program_template_program_template_id'), table_name='program_template')
    op.drop_table('program_template')
    op.drop_index(op.f('ix_discipline_name'), table_name='discipline')
    op.drop_index(op.f('ix_discipline_discipline_id'), table_name='discipline')
    op.drop_index(op.f('ix_discipline_category'), table_name='discipline')
    op.drop_table('discipline')
    # ### end Alembic commands ###
