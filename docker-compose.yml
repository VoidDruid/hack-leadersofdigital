version: "3.4"

networks:
  default:

services:
  core: &service
    container_name: ldigital-core
    environment:
      - RUN_LEVEL=dev
    entrypoint:
      - uvicorn
      - services.core:app
      - --host=0.0.0.0
      - --reload
    build:
      context: server
      dockerfile: deployment/docker/Dockerfile.server
      target: dev
      args:
        RUN_LEVEL: dev
    volumes:
      - ./server:/opt/app
    networks:
      - default
    restart: unless-stopped
    depends_on:
      - postgres

  celery:
    container_name: ldigital-celery
    environment:
      - RUN_LEVEL=dev
    build:
      context: server
      dockerfile: deployment/docker/Dockerfile.celery
      target: prod
    networks:
      - default
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: ldigital-postgres
    image: mdillon/postgis
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: ldigital
    networks:
      - default
    volumes:
      - ./.docker_data/postgres:/var/lib/postgresql/data

  mongo:
    container_name: ldigital-mongo
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ldigital
    networks:
      - default
    volumes:
      - ./.docker_data/mongo:/data/db

  redis:
    container_name: ldigital-redis
    image: library/redis:alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    networks:
      - default
    volumes:
    - ./.docker_data/redis:/var/lib/redis

  nginx:
    build:
      context: nginx
    container_name: ldigital-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - core
    networks:
      - default
